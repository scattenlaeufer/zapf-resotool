#!/usr/bin/bash

set -x
set -e

DESTDIR=/root/destdir
DEPLOYDIR=/srv/resotool

DBNAME=resotool
DBUSER=resotool

function check_db_engine {
    cd $DESTDIR
    python3 -c "from resotool.resotool.settings import DATABASES; print(DATABASES['default']['ENGINE'])"
}

function get_db_password {
    cd $DESTDIR
    python3 -c "from resotool.resotool.settings import DATABASES; print(DATABASES['default']['PASSWORD'])"
}

function set_up_db {
    sudo -u postgres psql <<EOF
CREATE DATABASE ${DBNAME};
CREATE USER ${DBUSER} WITH PASSWORD '${DBPASS}';
ALTER ROLE ${DBUSER} SET client_encoding TO 'utf8';
ALTER ROLE ${DBUSER} SET default_transaction_isolation TO 'read committed';
ALTER ROLE ${DBUSER} SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE ${DBNAME} TO ${DBUSER};
EOF
}

if [ "$1" = build ]; then
    :
else
    if [ $(check_db_engine) = "django.db.backends.postgresql_psycopg2" ]; then
        DBPASS=get_db_password
        set_up_db
    fi
    # deploy app
    mv $DESTDIR $DEPLOYDIR
    chown -R resotool:www-data $DEPLOYDIR
    cd $DEPLOYDIR

    # run migrations
    python3 resotool/manage.py migrate

    # generate user to run resotool under
    systemd-sysusers resotool.conf

    # install nginx config
    cat > /etc/nginx/sites-available/resotool <<EOF
server {
    listen 80;
    server_name server_domain_or_IP;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root ${DEPLOYDIR}/resotool/resotool/static/;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:${DEPLOYDIR}/resotool/resotool.sock;
    }
}
EOF
    ln -sf /etc/nginx/sites-available/resotool /etc/nginx/sites-enabled

    # install and enable gunicorn service file
    cat > /etc/systemd/system/resotool.service <<EOF
[Unit]
Description=gunicorn daemon for resotool
After=network.target nginx.service postgresql.service
Requires=nginx.service postgresql.service

[Service]
User=resotool
Group=www-data
WorkingDirectory=${DEPLOYDIR}
ExecStart=${DEPLOYDIR}/.venv/bin/gunicorn --access-logfile - --workers 3 --bind unix:${DEPLOYDIR}/resotool/resotool.sock resotool.wsgi:application

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload
    systemctl enable resotool.service
fi
